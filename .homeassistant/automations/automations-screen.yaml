# Close cover when projector is turned on
- alias: Close cover when MIBOX is turned on
  trigger:
  - platform: state
    entity_id: switch.mibox
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.yunhan_android
    state: 'on'
  action:
  - service: media_player.media_stop
    data:
        entity_id: media_player.playroom
  - service: cover.close_cover
    data:
        entity_id: cover.roll_screen
  - service: switch.turn_on
    data:
        entity_id: switch.screen_projector
  - service: switch.turn_off
    data:
        entity_id: switch.gardening_light
  - service: switch.turn_off
    data:
        entity_id: switch.music_auto_play
  - condition: template
    value_template: "{{ states.sun.sun.state == 'above_horizon'  }}"
  - service: cover.close_cover
    data:
        entity_id: cover.window_curtain

# Open cover when projector is turned off
- alias: Open cover when  projector is turned off
  trigger:
  - platform: state
    entity_id: switch.mibox
    to: 'off'
  condition:
  - condition: state
    entity_id: binary_sensor.yunhan_android
    state: 'on'
  action:
  - service: cover.open_cover
    data:
        entity_id: cover.roll_screen
  - service: switch.turn_off
    data:
        entity_id: switch.screen_projector
  - service: switch.turn_on
    data:
        entity_id: switch.music_auto_play
  - condition: template
    value_template: "{{ states.sun.sun.state == 'above_horizon'  }}"
  - service: cover.open_cover
    data:
        entity_id: cover.window_curtain


- alias: Go Home when MiBox is turned off
  trigger:
  - platform: state
    entity_id: switch.mibox
    to: 'off'
  action:
  - service: androidtv.adb_command
    data:
      entity_id: media_player.mibox
      command: "HOME"

- alias: Turn off when it is over 3 hour
  trigger:
  - platform: state
    entity_id: switch.mibox
    to: 'on'
    for:
      hours: 3
  action:
  - service: switch.turn_off
    data:
      entity_id: switch.mibox
